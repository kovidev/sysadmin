#!/usr/bin/env bash

# subversion mirror initializer

# exit immediately if any error occurs
set -e

progname=$(basename $0)
hooks="/etc/svn-mirror/hooks"
root=$PWD

usage() {
    echo "Usage: $progname REPOSITORY"
}

help() {
    echo "Subversion mirror initializer"
    echo ""
    usage
    echo ""
    echo "Options:"
    echo "  -h, --help          display this help and exit"
    echo "  -r, --root          root directory to create a mirror"
    echo "  --hooks             hooks directory (default $hooks)"
}

# parse options
# CAUTION: do not inline $args variable
# otherwise, program keeps going even `getopt` has been failed.
args=$(getopt -o hr: --long help,hooks:,root: -n $progname -- $@)
eval set -- $args
while true; do
    case "$1" in
        -h|--help) shift; help; exit 0;;
        -r|--root) root=$(realpath "$2"); shift 2;;
        --hooks) hooks="$2"; shift 2;;
        --) shift; break;;
    esac
done

if [ -z "$1" ]; then
    usage >&2
    exit 1
fi

repo=$1
mirror="file://$root/$repo"
source="svn://dev.kovi.com/$repo"

cleanup() {
    if [ -e "$root/$repo" ]; then
        read -p "$repo already exists. Delete it? (y/n) " -n 1
        echo ""
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            rm -rf "$root/$repo"
        else
            exit 1
        fi
    fi
}

# Check that $source is there first
svn ls $source >/dev/null &&
    cleanup &&
    svnadmin create "$root/$repo" &&
    cp -R $hooks "$root/$repo" &&
    svnsync init $mirror $source
